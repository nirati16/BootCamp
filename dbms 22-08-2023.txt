postgres#\dt  (display all the tables)--meta command
PROJECTION - reading data from tables --select command
SELECTION - filter data --where clause
RELATIONAL OPERATORS(=,>,<,>=,<=,!=,<>,in,between,like,is null)
	between(range of values) lower limit and upper limit both are included
	like(% replace any number of character, _ can replace any single char) --not for date
LOGICAL OPERATORS(AND,OR,NOT)
SORTING DATA --order by
	select * from emp order by 4; --sorting is done based on 4th column
scalar/ single row function --- for i/p we get 1 o/p
	select lower(ename) from emp;
	select upper('unext');
COALESCE
if else condition in a query
	select empno,ename,deptno,
	case deptno
	when 10 then 'A'
	when 20 then 'B'
	else 'C' end as empgrade from emp;
	
	select empno,ename,deptno,sal,
	case
	when sal between 500 and 1000 then 'Lgrade'
	when sal between 1001 and 2000 then 'Mgrade'
	when sal between 2001 and 3000 then 'Agrade'
	else 'Hgrade' end as empgrade from emp order by empgrade;

conversion(converts date to a particular format) -- to_char(date) --'yyyy-mm-dd'
	select current_date;
	select hiredate, to_char(hiredate,'dd-Mon-yy') from emp;
	select empno,ename,to_char(hiredate,'dd/mm/yy') from emp;
	select to_char(current_date,'Day ddth Month YYYY');
	select * from emp where trim(to_char(hiredate,'DAY'))='MONDAY';
	select * from emp where to_char(hiredate,'fmDAY')='MONDAY';
	select * from emp where to_char(hiredate,'dy')='mon';

subquery returning multiple values (IN,ALL,ANY)
correlated subquery

inline view/subquery used as derived table(virtual table)
	select * from emp e1 where sal>(select avg(sal) from emp e2 where e1.deptno=e2.deptno);
	select e.* from emp e join (select deptno, avg(sal) asal from emp group by deptno) x
	on e.deptno=x.deptno and e.sal>x.asal;
CTE --common table expression
	with xyz as (select deptno, avg(sal) asal from emp group by deptno)
	select e.* from emp e join xyz on e.deptno=x.deptno and e.sal>x.asal;

ALL THREE SAME O/P
	

CREATE TABLE EMP
       (EMPNO NUMERIC(4) NOT NULL,
        ENAME VARCHAR(10),
        JOB VARCHAR(9),
        MGR NUMERIC(4),
        HIREDATE DATE,
        SAL NUMERIC(7, 2),
        COMM NUMERIC(7, 2),
        DEPTNO NUMERIC(2));

INSERT INTO EMP VALUES
        (7369, 'SMITH',  'CLERK',     7902,
        TO_DATE('17-DEC-1980', 'DD-MON-YYYY'),  800, NULL, 20);
INSERT INTO EMP VALUES
        (7499, 'ALLEN',  'SALESMAN',  7698,
        TO_DATE('20-FEB-1981', 'DD-MON-YYYY'), 1600,  300, 30);
INSERT INTO EMP VALUES
        (7521, 'WARD',   'SALESMAN',  7698,
        TO_DATE('22-FEB-1981', 'DD-MON-YYYY'), 1250,  500, 30);
INSERT INTO EMP VALUES
        (7566, 'JONES',  'MANAGER',   7839,
        TO_DATE('2-APR-1981', 'DD-MON-YYYY'),  2975, NULL, 20);
INSERT INTO EMP VALUES
        (7654, 'MARTIN', 'SALESMAN',  7698,
        TO_DATE('28-SEP-1981', 'DD-MON-YYYY'), 1250, 1400, 30);
INSERT INTO EMP VALUES
        (7698, 'BLAKE',  'MANAGER',   7839,
        TO_DATE('1-MAY-1981', 'DD-MON-YYYY'),  2850, NULL, 30);
INSERT INTO EMP VALUES
        (7782, 'CLARK',  'MANAGER',   7839,
        TO_DATE('9-JUN-1981', 'DD-MON-YYYY'),  2450, NULL, 10);
INSERT INTO EMP VALUES
        (7788, 'SCOTT',  'ANALYST',   7566,
        TO_DATE('09-DEC-1982', 'DD-MON-YYYY'), 3000, NULL, 20);
INSERT INTO EMP VALUES
        (7839, 'KING',   'PRESIDENT', NULL,
        TO_DATE('17-NOV-1981', 'DD-MON-YYYY'), 5000, NULL, 10);
INSERT INTO EMP VALUES
        (7844, 'TURNER', 'SALESMAN',  7698,
        TO_DATE('8-SEP-1981', 'DD-MON-YYYY'),  1500,    0, 30);
INSERT INTO EMP VALUES
        (7876, 'ADAMS',  'CLERK',     7788,
        TO_DATE('12-JAN-1983', 'DD-MON-YYYY'), 1100, NULL, 20);
INSERT INTO EMP VALUES
        (7900, 'JAMES',  'CLERK',     7698,
        TO_DATE('3-DEC-1981', 'DD-MON-YYYY'),   950, NULL, 30);
INSERT INTO EMP VALUES
        (7902, 'FORD',   'ANALYST',   7566,
        TO_DATE('3-DEC-1981', 'DD-MON-YYYY'),  3000, NULL, 20);
INSERT INTO EMP VALUES
        (7934, 'MILLER', 'CLERK',     7782,
        TO_DATE('23-JAN-1982', 'DD-MON-YYYY'), 1300, NULL, 10);

CREATE TABLE DEPT
       (DEPTNO NUMERIC(2),
        DNAME VARCHAR(14),
        LOC VARCHAR(13) );

INSERT INTO DEPT VALUES (10, 'ACCOUNTING', 'NEW YORK');
INSERT INTO DEPT VALUES (20, 'RESEARCH',   'DALLAS');
INSERT INTO DEPT VALUES (30, 'SALES',      'CHICAGO');
INSERT INTO DEPT VALUES (40, 'OPERATIONS', 'BOSTON');

CREATE TABLE SALGRADE
        (GRADE NUMERIC,
         LOSAL NUMERIC,
         HISAL NUMERIC);

INSERT INTO SALGRADE VALUES (1,  700, 1200);
INSERT INTO SALGRADE VALUES (2, 1201, 1400);
INSERT INTO SALGRADE VALUES (3, 1401, 2000);
INSERT INTO SALGRADE VALUES (4, 2001, 3000);
INSERT INTO SALGRADE VALUES (5, 3001, 9999);